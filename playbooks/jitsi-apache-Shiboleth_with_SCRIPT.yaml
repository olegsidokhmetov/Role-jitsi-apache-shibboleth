---
- hosts: jitsi
  become: true
  tasks:

    - name: Update apt cache
      apt: update_cache=yes cache_valid_time=3600

    - name: Upgrade all apt packages
      apt: upgrade=dist

    - name: Install dependencies
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: true
      vars:
        packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - gnupg-agent

    - name: Install services
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: true
      vars:
        packages:
          - apache2
          - libmemcached11
          - libodbc1
          - shibboleth-sp2-common
          - libshibsp8
          - libshibsp-plugins
          - shibboleth-sp2-utils
          - libapache2-mod-shib2

    - name: install gnupg2
      apt:
        name: gnupg2
        update_cache: true
        state: latest

    - name: Enable appropriate apache2 modules
      apache2_module:
        state: present
        name: "{{ item }}"
      loop: "{{ modules }}"
      vars:
        modules:
          - ssl
          - proxy
          - proxy_http
          - include
          - headers
          - proxy_wstunnel
          - rewrite

    - name: Create new configuration file "js.quersys.com.conf"
      copy:
        dest: "/etc/apache2/sites-available/js.quersys.com.conf"
        content: |
          <VirtualHost *:80>
              ServerName js.quersys.com
              Redirect permanent / https://js.quersys.com/
          </VirtualHost>

          <VirtualHost *:443>
              ServerName js.quersys.com
              UseCanonicalName    On
              # enable HTTP/2, if available
              Protocols h2 http/1.1

              SSLEngine on
              SSLProxyEngine on
              SSLCertificateFile    /etc/ssl/js.quersys.com.crt
              SSLCertificateKeyFile /etc/ssl/js.quersys.com.key

              Header always set Strict-Transport-Security "max-age=63072000"

              DocumentRoot "/usr/share/jitsi-meet"
              <Directory "/usr/share/jitsi-meet">
                  Options Indexes MultiViews Includes FollowSymLinks
                  AddOutputFilter Includes html
                  AllowOverride All
                  Order allow,deny
                  Allow from all
              </Directory>

              ErrorDocument 404 /static/404.html

              Alias "/config.js" "/etc/jitsi/meet/js.quersys.com-config.js"
              <Location /config.js>
                  Require all granted
              </Location>

              Alias "/external_api.js" "/usr/share/jitsi-meet/libs/external_api.min.js"
              <Location /external_api.js>
                  Require all granted
              </Location>

              Alias "/interface_config.js" "/usr/share/jitsi-meet/interface_config.js"
              <Location /interface_config.js>
                  Require all granted
              </Location>

              <Location /Shibboleth.sso>
                  SetHandler shib
              </Location>

              <Location /login>
                  AuthType shibboleth
                  ShibRequestSetting requireSession true
                  ShibRequestSetting redirectToSSL 443
                  ShibUseHeaders On
                  Require valid-user
                  Sethandler shib
                  Header set mail "%{mail}s"
                  #RequestHeader set displayName "%{displayName}s"
                  #RequestHeader set mail "dioni@quersys.com
                  #RequestHeader set displayName "Jaime Sanchez"
                  ShibRequestSetting requireSession 1
                  ProxyPass http://localhost:8888/login
                  ProxyPassReverse http://localhost:8888/login
                  Require valid-user
              </Location>

              ProxyPreserveHost on
              ProxyPass /http-bind http://localhost:5280/http-bind
              ProxyPassReverse /http-bind http://localhost:5280/http-bind
              ProxyPass /xmpp-websocket ws://localhost:5280/xmpp-websocket
              ProxyPassReverse /xmpp-websocket ws://localhost:5280/xmpp-websocket
              ProxyPass /colibri-ws/default-id ws://localhost:9090/colibri-ws/default-id
              ProxyPassReverse /colibri-ws/default-id ws://localhost:9090/colibri-ws/default-id

              RewriteEngine on
              RewriteRule ^/([a-zA-Z0-9]+)$ /index.html
          </VirtualHost>
          # Mozilla Guideline v5.4, Apache 2.4.41, OpenSSL 1.1.1d, intermediate configuration, no OCSP
          SSLProtocol         all -SSLv3 -TLSv1 -TLSv1.1
          SSLCipherSuite      ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
          SSLHonorCipherOrder off
          SSLSessionTickets   off

    - name: Create symbolic links "js.quersys.com.conf"
      file:
        src: /etc/apache2/sites-available/js.quersys.com.conf
        dest: /etc/apache2/sites-enabled/js.quersys.com.conf
        state: link

    - name: Copy  cert file js.quersys.com.crt
      copy:
        src: /root/certificados/js.quersys.com.crt
        dest: /etc/ssl/js.quersys.com.crt
        remote_src: true

    - name: Copy  key file js.quersys.com.key
      copy:
        src: /root/certificados/js.quersys.com.key
        dest: /etc/ssl/js.quersys.com.key
        remote_src: true

    - name: Generate a key pair for a Shibboleth sp-signing
      shell: /usr/sbin/shib-keygen -u _shibd -g _shibd -h js.quersys.com -y 10 -e https://js.quersys.com/shibboleth -n sp-signing

    - name: Generate a key pair for a Shibboleth sp-encrypt
      shell: /usr/sbin/shib-keygen -u _shibd -g _shibd -h js.quersys.com -y 10 -e https://js.quersys.com/shibboleth -n sp-encrypt

    - name: Restart apache service.
      systemd:
        name: apache2
        state: restarted

    - name: Create new configuration of shibboleth
      copy:
        dest: "/etc/shibboleth/shibboleth2.xml"
        content: |
          <SPConfig xmlns="urn:mace:shibboleth:3.0:native:sp:config"
              xmlns:conf="urn:mace:shibboleth:3.0:native:sp:config"
              xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion"
              xmlns:samlp="urn:oasis:names:tc:SAML:2.0:protocol"
              xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata"
              clockSkew="180">

              <OutOfProcess tranLogFormat="%u|%s|%IDP|%i|%ac|%t|%attr|%n|%b|%E|%S|%SS|%L|%UA|%a" />

              <RequestMapper type="XML">
                  <RequestMap>
                          <Host name="js.quersys.com"
                            authType="shibboleth"
                            requireSession="true">
                          <Path name="/login" />
                      </Host>
                  </RequestMap>
              </RequestMapper>
              <!--
              By default, in-memory StorageService, ReplayCache, ArtifactMap, and SessionCache
              are used. See example-shibboleth2.xml for samples of explicitly configuring them.
              -->

              <!-- The ApplicationDefaults element is where most of Shibboleth's SAML bits are defined. -->
              <!--
              <ApplicationDefaults entityID="https://sp.example.org/shibboleth"
                  REMOTE_USER="eppn subject-id pairwise-id persistent-id"
                  cipherSuites="DEFAULT:!EXP:!LOW:!aNULL:!eNULL:!DES:!IDEA:!SEED:!RC4:!3DES:!kRSA:!SSLv2:!SSLv3:!TLSv1:!TLSv1.1">
              -->
              <ApplicationDefaults entityID="https://js.quersys.com/shibboleth"
          REMOTE_USER="eppn persistent-id targeted-id mail"
                  cipherSuites="DEFAULT:!EXP:!LOW:!aNULL:!eNULL:!DES:!IDEA:!SEED:!RC4:!3DES:!kRSA:!SSLv2:!SSLv3:!TLSv1:!TLSv1.1">

                  <!--
                  Controls session lifetimes, address checks, cookie handling, and the protocol handlers.
                  Each Application has an effectively unique handlerURL, which defaults to "/Shibboleth.sso"
                  and should be a relative path, with the SP computing the full value based on the virtual
                  host. Using handlerSSL="true" will force the protocol to be https. You should also set
                  cookieProps to "https" for SSL-only sites. Note that while we default checkAddress to
                  "false", this makes an assertion stolen in transit easier for attackers to misuse.
          -->
          <!--
                  <Sessions lifetime="28800" timeout="3600" relayState="ss:mem"
                            checkAddress="false" handlerSSL="false" cookieProps="http">
                  -->
                  <Sessions lifetime="28800" timeout="3600" relayState="ss:mem"
                            checkAddress="false" handlerSSL="true" cookieProps="https">

                      <!--
                      Configures SSO for a default IdP. To properly allow for >1 IdP, remove
                      entityID property and adjust discoveryURL to point to discovery service.
                      You can also override entityID on /Login query string, or in RequestMap/htaccess.
              -->
              <!--
                      <SSO entityID="https://idp.example.org/idp/shibboleth"
                          discoveryProtocol="SAMLDS" discoveryURL="https://ds.example.org/DS/WAYF">
                        SAML2
                      </SSO>
              -->
              <SSO entityID="https://secure.quersystem.net/idp/shibboleth"
                          discoveryProtocol="SAMLDS" discoveryURL="https://secure.quersystem.net/DS/WAYF">
                        SAML2 SAML1
                      </SSO>

                      <!-- SAML and local-only logout. -->
                      <Logout>SAML2 Local</Logout>

                      <!-- Administrative logout. -->
                      <LogoutInitiator type="Admin" Location="/Logout/Admin" acl="127.0.0.1 ::1" />

                      <!-- Extension service that generates "approximate" metadata based on SP configuration. -->
                      <Handler type="MetadataGenerator" Location="/Metadata" signing="false"/>

                      <!-- Status reporting service. -->
                      <Handler type="Status" Location="/Status" acl="127.0.0.1 ::1"/>

                      <!-- Session diagnostic service. -->
              <!--
              <Handler type="Session" Location="/Session" showAttributeValues="false"/>
              -->
              <Handler type="Session" Location="/Session" showAttributeValues="true"/>

                      <!-- JSON feed of discovery information. -->
                      <Handler type="DiscoveryFeed" Location="/DiscoFeed"/>
                  </Sessions>

                  <!--
                  Allows overriding of error template information/filenames. You can
                  also add your own attributes with values that can be plugged into the
                  templates, e.g., helpLocation below.
                  -->
                  <Errors supportContact="root@localhost"
                      helpLocation="/about.html"
                      styleSheet="/shibboleth-sp/main.css"/>

                  <!-- Example of locally maintained metadata. -->
                  <!--
                  <MetadataProvider type="XML" validate="true" path="partner-metadata.xml"/>
          -->

                  <MetadataProvider type="XML" validate="false" url="https://secure.quersystem.net/idp/shibboleth"/>

                  <!-- Example of remotely supplied batch of signed metadata. -->
                  <!--
                  <MetadataProvider type="XML" validate="true"
                      url="http://federation.org/federation-metadata.xml"
                        backingFilePath="federation-metadata.xml" maxRefreshDelay="7200">
                      <MetadataFilter type="RequireValidUntil" maxValidityInterval="2419200"/>
                      <MetadataFilter type="Signature" certificate="fedsigner.pem" verifyBackup="false"/>
                      <DiscoveryFilter type="Blacklist" matcher="EntityAttributes" trimTags="true"
                        attributeName="http://macedir.org/entity-category"
                        attributeNameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:uri"
                        attributeValue="http://refeds.org/category/hide-from-discovery" />
                  </MetadataProvider>
                  -->

                  <!-- Example of remotely supplied "on-demand" signed metadata. -->
                  <!--
                  <MetadataProvider type="MDQ" validate="true" cacheDirectory="mdq"
                      baseUrl="http://mdq.federation.org" ignoreTransport="true">
                      <MetadataFilter type="RequireValidUntil" maxValidityInterval="2419200"/>
                      <MetadataFilter type="Signature" certificate="mdqsigner.pem" />
                  </MetadataProvider>
                  -->

                  <!-- Map to extract attributes from SAML assertions. -->
                  <AttributeExtractor type="XML" validate="true" reloadChanges="false" path="attribute-map.xml"/>


                  <!-- Use a SAML query if no attributes are supplied during SSO. -->
                  <AttributeResolver type="Query" subjectMatch="true"/>


                  <!-- Default filtering policy for recognized attributes, lets other data pass. -->
                  <AttributeFilter type="XML" validate="true" path="attribute-policy.xml"/>

                  <!-- Simple file-based resolvers for separate signing/encryption keys. -->
                  <CredentialResolver type="File" use="signing"
                      key="sp-signing-key.pem" certificate="sp-signing-cert.pem"/>
                  <CredentialResolver type="File" use="encryption"
                      key="sp-encrypt-key.pem" certificate="sp-encrypt-cert.pem"/>

              </ApplicationDefaults>

              <!-- Policies that determine how to process and authenticate runtime messages. -->
              <SecurityPolicyProvider type="XML" validate="true" path="security-policy.xml"/>

              <!-- Low-level configuration about protocols and bindings available for use. -->
              <ProtocolProvider type="XML" validate="true" reloadChanges="false" path="protocols.xml"/>

          </SPConfig>

    - name: Restart shibd service.
      systemd:
        name: shibd 
        state: restarted

    - name: "Add apt-key for prosody"
      apt_key:
        url: https://prosody.im/files/prosody-debian-packages.key
        state: present

    - apt_repository:
        repo: "deb http://packages.prosody.im/debian {{ ansible_distribution_release }} main"
        state: present

    - name: "Add apt-key for jitsi"
      apt_key:
        url: https://download.jitsi.org/jitsi-key.gpg.key
        state: present

    - apt_repository:
        repo: "deb https://download.jitsi.org stable/"
        state: present

    - name: "update and upgrade packages"
      apt:
        update_cache: 'True'
        upgrade: 'True'

  # Setting DIALOG START
    - name: "Configure jitsi-meet package"
      debconf:
        name: "jitsi-videobridge2"
        question: "jitsi-videobridge/jvb-hostname"
        vtype: "string"
        value: "js.quersys.com"

    - name: "Configure jitsi-meet package"
      debconf:
        name: "jitsi-meet-web-config"
        question: "jitsi-meet/cert-choice"
        vtype: "select"
        value: "I want to use my own certificate"

    - name: "Configure jitsi-meet package"
      debconf:
        name: "jitsi-meet-web-config"
        question: "cert-path-crt"
        vtype: "string"
        value: "etc/ssl/js.quersys.com.key"

    - name: "Configure jitsi-meet package"
      debconf:
        name: "jitsi-meet-web-config"
        question: "cert-path-key"
        vtype: "string"
        value: "/etc/ssl/js.quersys.com.crt"
  # Setting DIALOG end

    - name: "install jitsi-meet"
      apt: 
        name:
        - jitsi-meet

    - lineinfile:
        dest: /etc/prosody/prosody.cfg.lua
        state: absent
        regexp: "admins = { }"

    - name: Configuration prosody
      blockinfile:
        dest: /etc/prosody/prosody.cfg.lua
        insertafter: '-- Example: admins = { "user1@example.com", "user2@example.net" }'
        block: |
          admins = { }
          https_ports = { }
          bosh_ports = { "http-bind" }
          component_ports = { 5347 }
          component_interface = "0.0.0.0"
          network_backend = "epoll"
          consider_bosh_secure = true

    - lineinfile:
        dest: /etc/prosody/prosody.cfg.lua
        state: absent
        regexp: "# BEGIN ANSIBLE MANAGED BLOCK"

    - lineinfile:
        dest: /etc/prosody/prosody.cfg.lua
        state: absent
        regexp: "# END ANSIBLE MANAGED BLOCK"

    - name: Change /etc/prosody/certs/localhost.* file permission "localhost.cnf"
      file:
        path: /etc/prosody/certs/localhost.cnf
        owner: prosody
        group: prosody

    - name: Change /etc/prosody/certs/localhost.* file permission "localhost.crt"
      file:
        path: /etc/prosody/certs/localhost.crt
        owner: prosody
        group: prosody

    - name: Change /etc/prosody/certs/localhost.* file permission "localhost.key"
      file:
        path: /etc/prosody/certs/localhost.key
        owner: prosody
        group: prosody

    - name: Copy files quersystem-logo.png
      copy:
        src: /home/chentolo/quersystem-logo.png 
        dest: /usr/share/jitsi-meet/images/watermark.png
        remote_src: true

    - name: Configuración Videobridge. Insert a line at the end of a file.
      lineinfile: 
        dest: /etc/jitsi/videobridge/sip-communicator.properties
        line: '{{ item }}'
      with_items:
        - 'org.ice4j.ice.harvest.NAT_HARVESTER_LOCAL_ADDRESS=172.16.3.34'
        - 'org.ice4j.ice.harvest.NAT_HARVESTER_PUBLIC_ADDRESS=95.216.101.211'

    - replace:
        path: /etc/jitsi/videobridge/sip-communicator.properties
        regexp: 'shard'
        replace: 'shard-1'

    - name: Creates directory "/home/scripts"
      file:
        path: /home/scripts
        state: directory

    - name: Creating a new script file
      copy:
        dest: "/home/scripts/shard_server_number"
        content: |
          #!/bin/bash
          DPATH="/etc/jitsi/videobridge/sip-communicator.properties"
          set -x
          k=$(grep -o -E 'shard-[0-9]+' $DPATH | sort -u) #shard ends by a number
          i=$(grep -o -E 'shard-[0-9]+' $DPATH | sort -u | cut -c7)
          m=$((i+1))
          n="shard-$m"
          sed -i "s|${k}|${n}|g" $DPATH

    - debug: msg="Running test app through Ansible shell module..."

    - name: Set executable for file "shard_server_number"
      file:
        dest: /home/scripts/shard_server_number
        mode: '+x'

    - name: This command will start bash script 
      shell: "/home/scripts/shard_server_number"
      args:
        chdir: "/home/scripts/"
        executable: "/bin/bash"

    - name: Create new configurationin file "js.quersys.com-config.js"
      copy:
        dest: "/etc/jitsi/meet/js.quersys.com-config.js" 
        content: |
          var config = {
              hosts: {
                  domain: 'js.quersys.com',
                  muc: 'conference.js.quersys.com'
              },
              bosh: '//js.quersys.com/http-bind',
              testing: {
                  p2pTestMode: false
              },
              enableNoAudioDetection: true,
              enableNoisyMicDetection: true,
              startWithVideoMuted: true,
              channelLastN: -1,
              requireDisplayName: true,
              enableWelcomePage: true,
              defaultLanguage: 'es',
              prejoinPageEnabled: true,

              toolbarButtons: [
                  'camera',
                  'chat',
                  'closedcaptions',
                  'desktop',
                  'download',
                  'embedmeeting',
                  'etherpad',
                  'feedback',
                  'filmstrip',
                  'fullscreen',
                  'hangup',
                  'help',
                  'invite',
                  'microphone',
                  'mute-everyone',
                  'mute-video-everyone',
                  'participants-pane',
                  'profile',
                  'raisehand',
                  'security',
                  'select-background',
                  'settings',
                  'shortcuts',
                  'stats',
                  'tileview',
                  'toggle-camera',
                  'videoquality',
                  '__end'
              ],
              p2p: {
                  enabled: true,
                  stunServers: [
                      { urls: 'stun:turn.quersys.com:3478' },
                  ]
              },
              analytics: {
              },
              deploymentInfo: {
              },
              
              mouseMoveCallbackInterval: 1000,
            
              makeJsonParserHappy: 'even if last key had a trailing comma'
          };

    - name: Configuration of file "all.css". Insert a line at the end of a file.
      lineinfile:
        dest: /usr/share/jitsi-meet/css/all.css
        line: '{{ item }}'
      with_items:
        - '.welcome .header .header-text-title{visibility: hidden;}'
        - '.welcome .header .header-text-title::after{content: &apos;VideoReunión QUERSYSTEM&apos;;visibility: visible; display: block;}'
        - '.welcome .header .header-text-subtitle{visibility: hidden;}'
        - '.welcome .welcome-watermark .watermark.leftwatermark{width: 140px; height: 70px;}'
        - '//.welcome .header{height: 530px;}'
        - '//.welcome .header{background-size: 100% 100%;}'
        - '.watermark { width: 140px; height: 70px;}'

    - name: Ansible multiple replace in file "interface_config.js"
      replace:
        path: "{{ item.path }}"
        regexp: "{{ item.regexp }}"
        replace: "{{ item.replace }}"
      with_items:
        - {path: '/usr/share/jitsi-meet/interface_config.js', regexp: "DEFAULT_LOCAL_DISPLAY_NAME: 'me',", replace: "DEFAULT_LOCAL_DISPLAY_NAME: 'Yo',"}
        - {path: '/usr/share/jitsi-meet/interface_config.js', regexp: "DEFAULT_LOGO_URL: 'images/watermark.svg',", replace: "DEFAULT_LOGO_URL: 'images/watermark.png',"}
        - {path: '/usr/share/jitsi-meet/interface_config.js', regexp: "DEFAULT_REMOTE_DISPLAY_NAME: 'Fellow Jitster',", replace: "DEFAULT_REMOTE_DISPLAY_NAME: 'Invitado',"}
        - {path: '/usr/share/jitsi-meet/interface_config.js', regexp: "DEFAULT_WELCOME_PAGE_LOGO_URL: 'images/watermark.svg',", replace: "DEFAULT_WELCOME_PAGE_LOGO_URL: 'images/watermark.png',"}
        - {path: '/usr/share/jitsi-meet/interface_config.js', regexp: "JITSI_WATERMARK_LINK: 'https://jitsi.org',", replace: "JITSI_WATERMARK_LINK: 'https://www.quersystem.com',"}

    - name: autentication shibboleth
      blockinfile:
        dest: /etc/jitsi/jicofo/jicofo.conf
        insertafter: 'jicofo {'
        block: |
          authentication {
            enabled = false
            type = SHIBBOLETH
            login-url = "shibboleth:default"
            logout-url = "shibboleth:default"
            authentication-lifetime = 24 hours
            enable-auto-login = true
          }

    - lineinfile:
        dest: /etc/jitsi/jicofo/jicofo.conf
        state: absent
        regexp: "# BEGIN ANSIBLE MANAGED BLOCK"

    - lineinfile:
        dest: /etc/jitsi/jicofo/jicofo.conf
        state: absent
        regexp: "# END ANSIBLE MANAGED BLOCK"

    - name: Restart multiple services in a loop
      service:
        name: "{{ item }}"
        state: restarted
        enabled: true
      become: true
      loop:
        - prosody.service
        - jicofo.service
        - jitsi-videobridge2.service