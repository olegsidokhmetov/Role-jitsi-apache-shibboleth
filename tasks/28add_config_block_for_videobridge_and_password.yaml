    - name: Next number of shard script
      shell: expr 1 + $(grep 'shard-' /etc/jitsi/videobridge/sip-communicator.properties | awk -F '.' '{print $6}' |uniq | sort | tail -n1 | cut -d '-' -f2 | xargs printf "%d" )
      register: siguiente_shard
      delegate_to: jvb1

    - debug:
        msg: "{{ siguiente_shard.stdout }}"

    - name: Obtener pasword videobridge
      shell: grep PASSWORD /etc/jitsi/videobridge/sip-communicator.properties | cut -d '=' -f2
      register: MYPASSWORD

    - debug:
        msg: "{{ MYPASSWORD.stdout }}"

    - name: Configuration sip-communicator.properties
      blockinfile:
        dest: /etc/jitsi/videobridge/sip-communicator.properties
        block: |
          org.jitsi.videobridge.xmpp.user.shard-siguiente.HOSTNAME={{ url_jitsi_hostname }}
          org.jitsi.videobridge.xmpp.user.shard-siguiente.DOMAIN=auth.{{ url_jitsi_domain }}
          org.jitsi.videobridge.xmpp.user.shard-siguiente.USERNAME={{ USERNAME }}
          org.jitsi.videobridge.xmpp.user.shard-siguiente.PASSWORD={ PASSWORD }
          org.jitsi.videobridge.xmpp.user.shard-siguiente.MUC_JIDS=JvbBrewery@internal.auth.js.{{ MUC_JIDS }}
          org.jitsi.videobridge.xmpp.user.shard-siguiente.MUC_NICKNAME={{ MUC_NICKNAME }}
      delegate_to: jvb1

    - replace:
        path: /etc/jitsi/videobridge/sip-communicator.properties
        regexp: 'shard-siguiente'
        replace: 'shard-{{ siguiente_shard.stdout }}'
      delegate_to: jvb1

    - replace:
        path: /etc/jitsi/videobridge/sip-communicator.properties
        regexp: '{ PASSWORD }'
        replace: '{{MYPASSWORD.stdout}}'
      delegate_to: jvb1

    - replace:
        path: /etc/jitsi/videobridge/sip-communicator.properties
        regexp: '^(.*)# BEGIN ANSIBLE MANAGED BLOCK(.*)$'
        replace: '#'
      delegate_to: jvb1

    - lineinfile:
        dest: /etc/jitsi/videobridge/sip-communicator.properties
        state: absent
        regexp: "# END ANSIBLE MANAGED BLOCK"
      delegate_to: jvb1
